### Starting build.
# Target: test.ml.depends, tags: { package(graphics), package(oUnit), package(str), extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -package graphics -modules test.ml > test.ml.depends
# Target: state.mli.depends, tags: { package(graphics), package(oUnit), package(str), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -package graphics -modules state.mli > state.mli.depends # cached
# Target: state.cmi, tags: { package(graphics), package(oUnit), package(str), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package oUnit -package str -package graphics -o state.cmi state.mli # cached
# Target: test.cmo, tags: { package(graphics), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package oUnit -package str -package graphics -o test.cmo test.ml
# Target: state.ml.depends, tags: { package(graphics), package(oUnit), package(str), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package oUnit -package str -package graphics -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(graphics), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package oUnit -package str -package graphics -o state.cmo state.ml # cached
# Target: test.byte, tags: { package(graphics), package(oUnit), package(str), byte, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse, use_menhir }
ocamlfind ocamlc -linkpkg -package oUnit -package str -package graphics state.cmo test.cmo -o test.byte
# Compilation successful.
